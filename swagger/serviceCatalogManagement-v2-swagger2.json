{
    "swagger": "2.0",
    "info": {
        "title": "Service Catalog Management",
        "description": "This is Swagger UI environment generated for the TMF Service Catalog Management specification",
        "version": "1.2"
    },
    "host": "env-0693795.jelastic.servint.net",
    "basePath": "/ServiceCatalog/api/catalogManagement/v2",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/category": {
            "get": {
                "operationId": "listCategory",
                "summary": "List or find 'Category' objects",
                "tags": [
                    "category"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "fields",
                        "description": "Comma separated properties to display in response"
                    },
                    {
                        "name": "lastUpdate",
                        "format": "date-time",
                        "required": false,
                        "in": "query",
                        "type": "string",
                        "description": "For filtering: Date and time of the last update"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "version",
                        "description": "For filtering: Category version"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "lifecycleStatus",
                        "description": "For filtering: Used to indicate the current lifecycle status"
                    },
                    {
                        "name": "validFor.startDateTime",
                        "format": "date-time",
                        "required": false,
                        "in": "query",
                        "type": "string",
                        "description": "For filtering: An instant of time, starting at the TimePeriod"
                    },
                    {
                        "name": "validFor.endDateTime",
                        "format": "date-time",
                        "required": false,
                        "in": "query",
                        "type": "string",
                        "description": "For filtering: An instant of time, ending at the TimePeriod."
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "parentId",
                        "description": "For filtering: Unique identifier of the parent category"
                    },
                    {
                        "type": "boolean",
                        "required": false,
                        "in": "query",
                        "name": "isRoot",
                        "description": "For filtering: If true, this Boolean indicates that the category is a root of categories"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "name",
                        "description": "For filtering: Name of the category"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Category"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "operationId": "createCategory",
                "summary": "Creates a 'Category'",
                "tags": [
                    "category"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Category_Create"
                        },
                        "required": true,
                        "in": "body",
                        "name": "category",
                        "description": "The Category to be created"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/category/{id}": {
            "get": {
                "operationId": "retrieveCategory",
                "summary": "Retrieves a 'Category' by Id",
                "tags": [
                    "category"
                ],
                "parameters": [
                    {
                        "required": true,
                        "type": "string",
                        "name": "id",
                        "in": "path",
                        "description": "Identifier of the Category"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Category"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "operationId": "updateCategory",
                "summary": "Updates a 'Category' by Id",
                "tags": [
                    "category"
                ],
                "parameters": [
                    {
                        "required": true,
                        "type": "string",
                        "name": "id",
                        "in": "path",
                        "description": "Identifier of the Category"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Category_Update"
                        },
                        "required": true,
                        "in": "body",
                        "name": "category",
                        "description": "The Category to be updated"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "operationId": "updateCategoryPatch",
                "summary": "Updates partially a 'Category' by Id",
                "tags": [
                    "category"
                ],
                "parameters": [
                    {
                        "required": true,
                        "type": "string",
                        "name": "id",
                        "in": "path",
                        "description": "Identifier of the Category"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/Category_Update"
                        },
                        "required": true,
                        "in": "body",
                        "name": "category",
                        "description": "The Category to be updated"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/serviceCandidate": {
            "get": {
                "operationId": "listServiceCandidate",
                "summary": "List or find 'ServiceCandidate' objects",
                "tags": [
                    "serviceCandidate"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "fields",
                        "description": "Comma separated properties to display in response"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "version",
                        "description": "For filtering: ServiceCandidate version"
                    },
                    {
                        "name": "lastUpdate",
                        "format": "date-time",
                        "required": false,
                        "in": "query",
                        "type": "string",
                        "description": "For filtering: Date and time of the last update"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "name",
                        "description": "For filtering: Name of the serviceCandidate"
                    },
                    {
                        "type": "boolean",
                        "required": false,
                        "in": "query",
                        "name": "isBundle",
                        "description": "For filtering: isBundle determines whether a serviceCandidate represents a single serviceCandidate (false), or a bundle of serviceCandidates (true)."
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "lifecycleStatus",
                        "description": "For filtering: Used to indicate the current lifecycle status"
                    },
                    {
                        "name": "validFor.startDateTime",
                        "format": "date-time",
                        "required": false,
                        "in": "query",
                        "type": "string",
                        "description": "For filtering: An instant of time, starting at the TimePeriod"
                    },
                    {
                        "name": "validFor.endDateTime",
                        "format": "date-time",
                        "required": false,
                        "in": "query",
                        "type": "string",
                        "description": "For filtering: An instant of time, ending at the TimePeriod."
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "serviceSpecification.version",
                        "description": "For filtering: Version of the service specification"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "serviceSpecification.name",
                        "description": "For filtering: Name of the service specification"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "serviceSpecification.type",
                        "description": "For filtering: Type of the service specification"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "serviceCandidate.version",
                        "description": "For filtering: Version of the service candidate"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "serviceCandidate.name",
                        "description": "For filtering: Name of the service candidate"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "category.version",
                        "description": "For filtering: Category version"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "category.name",
                        "description": "For filtering: Name of the category"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "resourceCandidate.version",
                        "description": "For filtering: Version of the resource candidate"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "resourceCandidate.name",
                        "description": "For filtering: Name of the resource candidate"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "bundledServiceCandidate.lifecycleStatus",
                        "description": "For filtering: Used to indicate the current lifecycle status"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "bundledServiceCandidate.name",
                        "description": "For filtering: Name of the BundledServiceCandidate"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "serviceCandidateTerm.name",
                        "description": "For filtering: Name of the serviceCandidateTerm"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "serviceCandidateTerm.duration",
                        "description": "For filtering: Duration of the serviceCandidateTerm"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ServiceCandidate"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "operationId": "createServiceCandidate",
                "summary": "Creates a 'ServiceCandidate'",
                "tags": [
                    "serviceCandidate"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ServiceCandidate_Create"
                        },
                        "required": true,
                        "in": "body",
                        "name": "serviceCandidate",
                        "description": "The Service Candidate to be created"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ServiceCandidate"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/serviceCandidate/{id}": {
            "get": {
                "operationId": "retrieveServiceCandidate",
                "summary": "Retrieves a 'ServiceCandidate' by Id",
                "tags": [
                    "serviceCandidate"
                ],
                "parameters": [
                    {
                        "required": true,
                        "type": "string",
                        "name": "id",
                        "in": "path",
                        "description": "Identifier of the Service Candidate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ServiceCandidate"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "operationId": "updateServiceCandidate",
                "summary": "Updates a 'ServiceCandidate' by Id",
                "tags": [
                    "serviceCandidate"
                ],
                "parameters": [
                    {
                        "required": true,
                        "type": "string",
                        "name": "id",
                        "in": "path",
                        "description": "Identifier of the Service Candidate"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/ServiceCandidate_Update"
                        },
                        "required": true,
                        "in": "body",
                        "name": "serviceCandidate",
                        "description": "The Service Candidate to be updated"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/ServiceCandidate"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "operationId": "updateServiceCandidatePatch",
                "summary": "Updates partially a 'ServiceCandidate' by Id",
                "tags": [
                    "serviceCandidate"
                ],
                "parameters": [
                    {
                        "required": true,
                        "type": "string",
                        "name": "id",
                        "in": "path",
                        "description": "Identifier of the Service Candidate"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/ServiceCandidate_Update"
                        },
                        "required": true,
                        "in": "body",
                        "name": "serviceCandidate",
                        "description": "The Service Candidate to be updated"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/ServiceCandidate"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/serviceSpecification": {
            "get": {
                "operationId": "listServiceSpecification",
                "summary": "List or find 'ServiceSpecification' objects",
                "tags": [
                    "serviceSpecification"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "fields",
                        "description": "Comma separated properties to display in response"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "version",
                        "description": "For filtering: Service specification version"
                    },
                    {
                        "name": "lastUpdate",
                        "format": "date-time",
                        "required": false,
                        "in": "query",
                        "type": "string",
                        "description": "For filtering: Date and time of the last update"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "name",
                        "description": "For filtering: Name of the service specification"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": “type”,
                        "description": "For filtering: Type of the service specification"
                    },
                    {
                        "type": "boolean",
                        "required": false,
                        "in": "query",
                        "name": "isBundle",
                        "description": "For filtering: isBundle determines whether a serviceSpecification represents a single serviceSpecification (false), or a bundle of serviceSpecification (true)."
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "lifecycleStatus",
                        "description": "For filtering: Used to indicate the current lifecycle status"
                    },
                    {
                        "name": "validFor.startDateTime",
                        "format": "date-time",
                        "required": false,
                        "in": "query",
                        "type": "string",
                        "description": "For filtering: An instant of time, starting at the TimePeriod"
                    },
                    {
                        "name": "validFor.endDateTime",
                        "format": "date-time",
                        "required": false,
                        "in": "query",
                        "type": "string",
                        "description": "For filtering: An instant of time, ending at the TimePeriod."
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "serviceNumber",
                        "description": "For filtering: An identification number assigned to uniquely identity the specification"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "relatedParty.role",
                        "description": "For filtering: Role of the related party."
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "relatedParty.name",
                        "description": "For filtering: Name of the related party"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "serviceSpecCharacteristic.name",
                        "description": "For filtering: Name of the serviceSpecCharacteristic"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "serviceSpecCharacteristic.valueType",
                        "description": "For filtering: A kind of value that the characteristic can take on, such as numeric, text and so forth"
                    },
                    {
                        "type": "boolean",
                        "required": false,
                        "in": "query",
                        "name": "serviceSpecCharacteristic.configurable",
                        "description": "For filtering: If true, the Boolean indicates that the serviceSpecCharacteristic is configurable"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "serviceSpecification.name",
                        "description": "For filtering: Name of the requiredServiceSpecification"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "serviceSpecification.version",
                        "description": "For filtering: Service specification version"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "serviceSpecificationRelationship.type",
                        "description": "For filtering: Type of relationship such as migration, substitution, dependency, exclusivity"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "resourceSpecification.name",
                        "description": "For filtering: Name of the requiredResourceSpecification"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "resourceSpecification.version",
                        "description": "For filtering: Resource specification version"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "attachment.type",
                        "description": "For filtering: Attachment type such as video, picture"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "attachment.url",
                        "description": "For filtering: Uniform Resource Locator, is a web page address (a subset of URI)"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "bundledServiceSpecification.lifecycleStatus",
                        "description": "For filtering: Used to indicate the current lifecycle status"
                    },
                    {
                        "type": "string",
                        "required": false,
                        "in": "query",
                        "name": "bundledServiceSpecification.name",
                        "description": "For filtering: Name of the service specification"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ServiceSpecification"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "operationId": "createServiceSpecification",
                "summary": "Creates a 'ServiceSpecification'",
                "tags": [
                    "serviceSpecification"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ServiceSpecification_Create"
                        },
                        "required": true,
                        "in": "body",
                        "name": "serviceSpecification",
                        "description": "The Service Specification to be created"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ServiceSpecification"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/serviceSpecification/{id}": {
            "get": {
                "operationId": "retrieveServiceSpecification",
                "summary": "Retrieves a 'ServiceSpecification' by Id",
                "tags": [
                    "serviceSpecification"
                ],
                "parameters": [
                    {
                        "required": true,
                        "type": "string",
                        "name": "id",
                        "in": "path",
                        "description": "Identifier of the Service Specification"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ServiceSpecification"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "operationId": "updateServiceSpecification",
                "summary": "Updates a 'ServiceSpecification' by Id",
                "tags": [
                    "serviceSpecification"
                ],
                "parameters": [
                    {
                        "required": true,
                        "type": "string",
                        "name": "id",
                        "in": "path",
                        "description": "Identifier of the Service Specification"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/ServiceSpecification_Update"
                        },
                        "required": true,
                        "in": "body",
                        "name": "serviceSpecification",
                        "description": "The Service Specification to be updated"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/ServiceSpecification"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "operationId": "updateServiceSpecificationPatch",
                "summary": "Updates partially a 'ServiceSpecification' by Id",
                "tags": [
                    "serviceSpecification"
                ],
                "parameters": [
                    {
                        "required": true,
                        "type": "string",
                        "name": "id",
                        "in": "path",
                        "description": "Identifier of the Service Specification"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/ServiceSpecification_Update"
                        },
                        "required": true,
                        "in": "body",
                        "name": "serviceSpecification",
                        "description": "The Service Specification to be updated"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/ServiceSpecification"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/hub": {
            "post": {
                "operationId": "registerListener",
                "summary": "Register a listener",
                "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
                "tags": [
                    "events subscription"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "schema": {
                            "$ref": "#/definitions/EventSubscriptionInput"
                        },
                        "required": true,
                        "in": "body",
                        "description": "Data containing the callback endpoint to deliver the information"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Subscribed",
                        "schema": {
                            "$ref": "#/definitions/EventSubscription"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/hub/{id}": {
            "delete": {
                "operationId": "unregisterListener",
                "summary": "Unregister a listener",
                "description": "Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
                "tags": [
                    "events subscription"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "description": "The id of the registered listener"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Unsubscribed"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/listener/catalogChangeBatchNotification": {
            "post": {
                "operationId": "publishCatalogChangeBatchNotification",
                "summary": "Publishes a 'CatalogChangeBatchNotification'",
                "tags": [
                    "events publication"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CatalogChangeBatchNotification"
                        },
                        "required": true,
                        "in": "body",
                        "name": "catalogChangeBatchNotification",
                        "description": "The Catalog Change Batch Notification to be published"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Published"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/listener/catalogChangeNotification": {
            "post": {
                "operationId": "publishCatalogChangeNotification",
                "summary": "Publishes a 'CatalogChangeNotification'",
                "tags": [
                    "events publication"
                ],
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CatalogChangeNotification"
                        },
                        "required": true,
                        "in": "body",
                        "name": "catalogChangeNotification",
                        "description": "The Catalog Change Notification to be published"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Published"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Catalog": {
            "type": "object",
            "description": "A collection of Service Candidates.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the Catalog"
                },
                "href": {
                    "type": "string",
                    "description": "Unique reference of the catalog"
                },
                "version": {
                    "type": "string",
                    "description": "Catalog version"
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of the last update"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates if the catalog is a service, service or resource catalog"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the catalog"
                },
                "lifecycleStatus": {
                    "type": "string",
                    "description": "Used to indicate the current lifecycle status"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                },
                "category": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CategoryRef"
                    }
                }
            }
        },
        "Category": {
            "type": "object",
            "description": "The category resource is used to group service candidates, service and resource candidates in logical containers. Categories can contain other categories and/or service candidates, resource or service candidates.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the category"
                },
                "href": {
                    "type": "string",
                    "description": "Reference of the catalog"
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of the last update"
                },
                "version": {
                    "type": "string",
                    "description": "Category version"
                },
                "lifecycleStatus": {
                    "type": "string",
                    "description": "Used to indicate the current lifecycle status"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                },
                "parentId": {
                    "type": "string",
                    "description": "Unique identifier of the parent category"
                },
                "isRoot": {
                    "type": "boolean",
                    "description": "If true, this Boolean indicates that the category is a root of categories"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the category"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the category"
                }
            }
        },
        "Category_Create": {
            "type": "object",
            "description": "The category resource is used to group service candidates, service and resource candidates in logical containers. Categories can contain other categories and/or service candidates, resource or service candidates.\nSkipped properties: id,href",
            "required": [
                "name",
                "parentId"
            ],
            "properties": {
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of the last update"
                },
                "version": {
                    "type": "string",
                    "description": "Category version"
                },
                "lifecycleStatus": {
                    "type": "string",
                    "description": "Used to indicate the current lifecycle status"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                },
                "parentId": {
                    "type": "string",
                    "description": "Unique identifier of the parent category"
                },
                "isRoot": {
                    "type": "boolean",
                    "description": "If true, this Boolean indicates that the category is a root of categories"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the category"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the category"
                }
            }
        },
        "Category_Update": {
            "type": "object",
            "description": "The category resource is used to group service candidates, service and resource candidates in logical containers. Categories can contain other categories and/or service candidates, resource or service candidates.\nSkipped properties: id,href,id,lastUpdate",
            "properties": {
                "version": {
                    "type": "string",
                    "description": "Category version"
                },
                "lifecycleStatus": {
                    "type": "string",
                    "description": "Used to indicate the current lifecycle status"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                },
                "parentId": {
                    "type": "string",
                    "description": "Unique identifier of the parent category"
                },
                "isRoot": {
                    "type": "boolean",
                    "description": "If true, this Boolean indicates that the category is a root of categories"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the category"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the category"
                }
            }
        },
        "ServiceCandidate": {
            "type": "object",
            "description": "Represents entities that may be ordered from the provider of the catalog.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the serviceCandidate"
                },
                "href": {
                    "type": "string",
                    "description": "Reference of the ServiceCandidate"
                },
                "version": {
                    "type": "string",
                    "description": "ServiceCandidate version"
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of the last update"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the serviceCandidate"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the serviceCandidate"
                },
                "isBundle": {
                    "type": "boolean",
                    "description": "isBundle determines whether a serviceCandidate represents a single serviceCandidate (false), or a bundle of serviceCandidates (true)."
                },
                "lifecycleStatus": {
                    "type": "string",
                    "description": "Used to indicate the current lifecycle status"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                },
                "serviceSpecification": {
                    "$ref": "#/definitions/ServiceSpecificationRef"
                },
                "category": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CategoryRef"
                    }
                },
                "resourceCandidate": {
                    "$ref": "#/definitions/ResourceCandidateRef"
                },
                "bundledServiceCandidate": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BundledServiceCandidate"
                    }
                },
                "serviceCandidateTerm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceCandidateTerm"
                    }
                }
            }
        },
        "ServiceCandidate_Create": {
            "type": "object",
            "description": "Represents entities that are orderable from the provider of the catalog.\nSkipped properties: id,href",
            "required": [
                "name",
                "bundledServiceCandidate",
                "serviceSpecification"
            ],
            "properties": {
                "version": {
                    "type": "string",
                    "description": "ServiceCandidate version"
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of the last update"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the serviceCandidate"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the serviceCandidate"
                },
                "isBundle": {
                    "type": "boolean",
                    "description": "isBundle determines whether a serviceCandidate represents a single serviceCandidate (false), or a bundle of serviceCandidates (true)."
                },
                "lifecycleStatus": {
                    "type": "string",
                    "description": "Used to indicate the current lifecycle status"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                },
                "serviceSpecification": {
                    "$ref": "#/definitions/ServiceSpecificationRef"
                },
                "category": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CategoryRef"
                    }
                },
                "resourceCandidate": {
                    "$ref": "#/definitions/ResourceCandidateRef"
                },
                "bundledServiceCandidate": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BundledServiceCandidate"
                    }
                },
                "serviceCandidateTerm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceCandidateTerm"
                    }
                }
            }
        },
        "ServiceCandidate_Update": {
            "type": "object",
            "description": "Represents entities that are orderable from the provider of the catalog.\nSkipped properties: id,href,id,lastUpdate",
            "properties": {
                "version": {
                    "type": "string",
                    "description": "ServiceCandidate version"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the serviceCandidate"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the serviceCandidate"
                },
                "isBundle": {
                    "type": "boolean",
                    "description": "isBundle determines whether a serviceCandidate represents a single serviceCandidate (false), or a bundle of serviceCandidates (true)."
                },
                "lifecycleStatus": {
                    "type": "string",
                    "description": "Used to indicate the current lifecycle status"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                },
                "serviceSpecification": {
                    "$ref": "#/definitions/ServiceSpecificationRef"
                },
                "category": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CategoryRef"
                    }
                },
                "resourceCandidate": {
                    "$ref": "#/definitions/ResourceCandidateRef"
                },
                "bundledServiceCandidate": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BundledServiceCandidate"
                    }
                },
                "serviceCandidateTerm": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceCandidateTerm"
                    }
                }
            }
        },
        "ServiceSpecification": {
            "type": "object",
            "description": "Is a detailed description of a tangible or intangible object made available externally in the form of a ServiceCandidate to service delivery partners or other parties playing a party role.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the service specification"
                },
                "href": {
                    "type": "string",
                    "description": "Reference of the service specification"
                },
                "version": {
                    "type": "string",
                    "description": "Service specification version"
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of the last update"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the service specification"
                },
                “type”: {
                    "type": "string",
                    "description": “Type of the service specification"
                },
                "description": {
                    "type": "string",
                    "description": "A narrative that explains in detail what the service specification is"
                },
                "isBundle": {
                    "type": "boolean",
                    "description": "isBundle determines whether a serviceSpecification represents a single serviceSpecification (false), or a bundle of serviceSpecification (true)."
                },
                "lifecycleStatus": {
                    "type": "string",
                    "description": "Used to indicate the current lifecycle status"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                },
                "serviceNumber": {
                    "type": "string",
                    "description": "An identification number assigned to uniquely identity the specification"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                },
                "serviceSpecCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceSpecCharacteristic"
                    }
                },
                "serviceSpecificationRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceSpecificationRelationship"
                    }
                },
                "resourceSpecification": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ResourceSpecificationRef"
                    }
                },
                "attachment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "bundledServiceSpecification": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BundledServiceSpecification"
                    }
                }
            }
        },
        "ServiceSpecification_Create": {
            "type": "object",
            "description": "Is a detailed description of a tangible or intangible object made available externally in the form of a ServiceCandidate to service delivery partners or other parties playing a party role.\nSkipped properties: id,href",
            "required": [
                "name",
                "bundledServiceSpecification",
                "serviceSpecCharacteristic"
            ],
            "properties": {
                "version": {
                    "type": "string",
                    "description": "Service specification version"
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of the last update"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the service specification"
                },
                “type”: {
                    "type": "string",
                    "description": “Type of the service specification"
                },
                "description": {
                    "type": "string",
                    "description": "A narrative that explains in detail what the service specification is"
                },
                "isBundle": {
                    "type": "boolean",
                    "description": "isBundle determines whether a serviceSpecification represents a single serviceSpecification (false), or a bundle of serviceSpecification (true)."
                },
                "lifecycleStatus": {
                    "type": "string",
                    "description": "Used to indicate the current lifecycle status"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                },
                "serviceNumber": {
                    "type": "string",
                    "description": "An identification number assigned to uniquely identity the specification"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                },
                "serviceSpecCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceSpecCharacteristic"
                    }
                },
                "serviceSpecificationRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceSpecificationRelationship"
                    }
                },
                "resourceSpecification": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ResourceSpecificationRef"
                    }
                },
                "attachment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "bundledServiceSpecification": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BundledServiceSpecification"
                    }
                }
            }
        },
        "ServiceSpecification_Update": {
            "type": "object",
            "description": "Is a detailed description of a tangible or intangible object made available externally in the form of a ServiceCandidate to service delivery partners or other parties playing a party role.\nSkipped properties: id,href,id,lastUpdate",
            "properties": {
                "version": {
                    "type": "string",
                    "description": "Service specification version"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the service specification"
                },
                “type”: {
                    "type": "string",
                    "description": “Type of the service specification"
                },
                "description": {
                    "type": "string",
                    "description": "A narrative that explains in detail what the service specification is"
                },
                "isBundle": {
                    "type": "boolean",
                    "description": "isBundle determines whether a serviceSpecification represents a single serviceSpecification (false), or a bundle of serviceSpecification (true)."
                },
                "lifecycleStatus": {
                    "type": "string",
                    "description": "Used to indicate the current lifecycle status"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                },
                "serviceNumber": {
                    "type": "string",
                    "description": "An identification number assigned to uniquely identity the specification"
                },
                "relatedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                },
                "serviceSpecCharacteristic": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceSpecCharacteristic"
                    }
                },
                "serviceSpecificationRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceSpecificationRelationship"
                    }
                },
                "resourceSpecification": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ResourceSpecificationRef"
                    }
                },
                "attachment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }
                },
                "bundledServiceSpecification": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BundledServiceSpecification"
                    }
                }
            }
        },
        "TimePeriod": {
            "type": "object",
            "description": "A base / value business entity used to represent a period of time between two timepoints.",
            "properties": {
                "startDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "An instant of time, starting at the TimePeriod"
                },
                "endDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "An instant of time, ending at the TimePeriod."
                }
            }
        },
        "RelatedPartyRef": {
            "type": "object",
            "description": "RelatedParty reference. RelatedParty defines party or party role linked to a specific entity.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of a related party"
                },
                "href": {
                    "type": "string",
                    "description": "Reference of the related party, could be a party reference or a partyRole reference"
                },
                "role": {
                    "type": "string",
                    "description": "Role of the related party."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related party"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                }
            }
        },
        "CategoryRef": {
            "type": "object",
            "description": "Category reference. The category resource is used to group service candidates, service and resource candidates in logical containers. Categories can contain other categories and/or service candidates, resource or service candidates.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique reference of the category"
                },
                "href": {
                    "type": "string",
                    "description": "Unique reference of the category"
                },
                "version": {
                    "type": "string",
                    "description": "Category version"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the category"
                }
            }
        },
        "PlaceRef": {
            "type": "object",
            "description": "Place reference. Place defines the places where the service candidates are sold.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the place"
                },
                "href": {
                    "type": "string",
                    "description": "Unique reference of the place"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the place"
                }
            }
        },
        "ServiceSpecificationRef": {
            "type": "object",
            "description": "Service specification reference: A ServiceSpecification is a detailed description of a tangible or intangible object made available externally in the form of a ServiceCandidate to service delivery partners or other parties playing a party role.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the service specification"
                },
                "href": {
                    "type": "string",
                    "description": "Reference of the service specification"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the service specification"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the service specification"
                }
            }
        },
        "ServiceCandidateRef": {
            "type": "object",
            "description": "ServiceCandidate reference. ServiceCandidate is an entity that makes a ServiceSpecification available to a catalog.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the service candidate"
                },
                "href": {
                    "type": "string",
                    "description": "Unique reference of the service candidate"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the service candidate"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the service candidate"
                }
            }
        },
        "ResourceCandidateRef": {
            "type": "object",
            "description": "ResourceCandidate reference: A resource candidate is an entity that makes a ResourceSpecification available to a catalog.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource candidate"
                },
                "href": {
                    "type": "string",
                    "description": "Reference of the resource candidate"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the resource candidate"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the resource candidate"
                }
            }
        },
        "BundledServiceCandidate": {
            "type": "object",
            "description": "A type of ServiceCandidate that belongs to a grouping of ServiceCandidates made available to the market. It inherits of all attributes of ServiceCandidate.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the BundledServiceCandidate"
                },
                "href": {
                    "type": "string",
                    "description": "Unique reference of the BundledServiceCandidate"
                },
                "lifecycleStatus": {
                    "type": "string",
                    "description": "Used to indicate the current lifecycle status"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the BundledServiceCandidate"
                }
            }
        },
        "ServiceCandidateTerm": {
            "type": "object",
            "description": "A condition under which a ServiceCandidate is made available to Service Delivery Partners. For instance, a serviceCandidate can be offered with multiple commitment periods.",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the serviceCandidateTerm"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the serviceCandidateTerm"
                },
                "duration": {
                    "type": "string",
                    "description": "Duration of the serviceCandidateTerm"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                }
            }
        },
        "ServiceSpecCharacteristic": {
            "type": "object",
            "description": "A characteristic quality or distinctive feature of a ServiceSpecification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process.",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the serviceSpecCharacteristic"
                },
                "description": {
                    "type": "string",
                    "description": "A narrative that explains in detail what the serviceSpecCharacteristic is"
                },
                "valueType": {
                    "type": "string",
                    "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                },
                "configurable": {
                    "type": "boolean",
                    "description": "If true, the Boolean indicates that the serviceSpecCharacteristic is configurable"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                },
                "serviceSpecCharRelationship": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceSpecCharRelationship"
                    }
                },
                "serviceSpecCharacteristicValue": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceSpecCharacteristicValue"
                    }
                }
            }
        },
        "ServiceSpecificationRelationship": {
            "type": "object",
            "description": "A migration, substitution, dependency or exclusivity relationship between/among service specifications.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the serviceSpecification"
                },
                "href": {
                    "type": "string",
                    "description": "Reference of the serviceSpecification"
                },
                "type": {
                    "type": "string",
                    "description": "Type of relationship such as migration, substitution, dependency, exclusivity"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                }
            }
        },
        "ResourceSpecificationRef": {
            "type": "object",
            "description": "Resource Specification reference: The ResourceSpecification is required to realize a ServiceSpecification.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource specification"
                },
                "href": {
                    "type": "string",
                    "description": "Reference of the resource specification"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the requiredResourceSpecification"
                },
                "version": {
                    "type": "string",
                    "description": "Resource specification version"
                }
            }
        },
        "Attachment": {
            "type": "object",
            "description": "Describes a service through video, pictures...",
            "properties": {
                "href": {
                    "type": "string",
                    "description": "Reference of the attachment"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the attachment"
                },
                "type": {
                    "type": "string",
                    "description": "Attachment type such as video, picture"
                },
                "url": {
                    "type": "string",
                    "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                }
            }
        },
        "BundledServiceSpecification": {
            "type": "object",
            "description": "A type of ServiceSpecification that belongs to a grouping of ServiceSpecifications made available to the market. It inherits of all attributes of ServiceSpecification.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the service specification"
                },
                "href": {
                    "type": "string",
                    "description": "Reference of the service specification"
                },
                "lifecycleStatus": {
                    "type": "string",
                    "description": "Used to indicate the current lifecycle status"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the service specification"
                }
            }
        },
        "ServiceSpecCharRelationship": {
            "type": "object",
            "description": "An aggregation, migration, substitution, dependency or exclusivity relationship between/among serviceSpecCharacteristics.",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Type of relationship such as aggregation, migration, substitution, dependency, exclusivity"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                }
            }
        },
        "ServiceSpecCharacteristicValue": {
            "type": "object",
            "description": "A number or text that can be assigned to a ServiceSpecCharacteristic.",
            "properties": {
                "valueType": {
                    "type": "string",
                    "description": "A kind of value that the characteristic can take on, such as numeric, text, and so forth"
                },
                "default": {
                    "type": "boolean",
                    "description": "Indicates if the value is the default value for a characteristic"
                },
                "value": {
                    "type": "string",
                    "description": "A discrete value that the characteristic can take on"
                },
                "unitOfMeasure": {
                    "type": "string",
                    "description": "Could be minutes, GB..."
                },
                "valueFrom": {
                    "type": "string",
                    "description": "The low range value that a characteristic can take on"
                },
                "valueTo": {
                    "type": "string",
                    "description": "The upper range value that a characteristic can take on"
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                }
            }
        },
        "CatalogChangeBatchNotification": {
            "type": "object",
            "description": "TheCatalogChangeBatch notification is sent to each listener who has subscribed to receive it.",
            "properties": {
                "eventType": {
                    "type": "string",
                    "description": "Type of event"
                },
                "eventTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation date of the event"
                },
                "eventId": {
                    "type": "string",
                    "description": "Identifier of the event"
                },
                "resourcePath": {
                    "type": "string",
                    "description": "To indicate which entity is concerned"
                },
                "fieldPath": {
                    "type": "string",
                    "description": "details which field is missing, its structure is quite similar to GET filter criteria"
                },
                "event": {
                    "$ref": "#/definitions/CatalogEvent"
                }
            }
        },
        "CatalogChangeNotification": {
            "type": "object",
            "description": "TheCatalogChange notification is sent to each listener who has subscribed to receive it.",
            "properties": {
                "eventType": {
                    "type": "string",
                    "description": "Type of event"
                },
                "eventTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation date of the event"
                },
                "eventId": {
                    "type": "string",
                    "description": "Identifier of the event"
                },
                "resourcePath": {
                    "type": "string",
                    "description": "To indicate which entity is concerned"
                },
                "fieldPath": {
                    "type": "string",
                    "description": "details which field is missing, its structure is quite similar to GET filter criteria"
                },
                "event": {
                    "$ref": "#/definitions/CatalogEvent"
                }
            }
        },
        "CatalogEvent": {
            "type": "object",
            "description": "The Catalog event is generated each time a catalog is updated.",
            "properties": {
                "catalog": {
                    "$ref": "#/definitions/Catalog"
                }
            }
        },
        "EventSubscription": {
            "required": [
                "id",
                "callback"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Id of the listener"
                },
                "callback": {
                    "type": "string",
                    "description": "The callback being registered."
                },
                "query": {
                    "type": "string",
                    "description": "additional data to be passed"
                }
            }
        },
        "EventSubscriptionInput": {
            "required": [
                "callback"
            ],
            "properties": {
                "callback": {
                    "type": "string",
                    "description": "The callback being registered."
                },
                "query": {
                    "type": "string",
                    "description": "additional data to be passed"
                }
            }
        },
        "Error": {
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "description": "An integer coding the error type. This is given to caller so he can translate them if required."
                },
                "message": {
                    "type": "string",
                    "description": "A short localized string that describes the error."
                },
                "description": {
                    "type": "string",
                    "description": "(optional) A long localized error description if needed. It can contain precise information about which parameter is missing, or what are the identifier acceptable values."
                },
                "infoURL": {
                    "type": "string",
                    "description": "(optional) A URL to online documentation that provides more information about the error."
                }
            }
        }
    }
}