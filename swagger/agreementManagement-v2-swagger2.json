{
    "swagger": "2.0", 
    "info": {
        "title": "Agreement Management", 
        "description": "This is Swagger UI environment generated for the TMF Agreement Management specification", 
        "version": "1.0"
    }, 
    "host": "biologeek.orange-labs.fr", 
    "basePath": "/tmf-api/agreementManagement", 
    "schemes": [
        "https"
    ], 
    "consumes": [
        "application/json"
    ], 
    "produces": [
        "application/json"
    ], 
    "paths": {
        "/agreement": {
            "get": {
                "operationId": "listAgreement", 
                "summary": "List or find 'Agreement' objects.",
                "description": "This operation is used to retrieve Agreement information, using filtering criteria. The request may specify the list of fields to be returned in the response, along with query parameters i.e. filter, for returning specific 'Agreement' objects. e.g. /agreement?fields=id,name&status=approved&engagedParty.name=\"So Magic Ltd\"",
                "tags": [
                    "agreement"
                ], 
                "parameters": [
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "fields", 
                        "description": "Comma separated properties to display in the response."
                    }, 
                    {
                        "name": "agreementPeriod.endDateTime", 
                        "format": "date-time", 
                        "required": false, 
                        "in": "query", 
                        "type": "string", 
                        "description": "For filtering: An instant of time, ending at the TimePeriod."
                    }, 
                    {
                        "name": "agreementPeriod.startDateTime", 
                        "format": "date-time", 
                        "required": false, 
                        "in": "query", 
                        "type": "string", 
                        "description": "For filtering: An instant of time, starting at the TimePeriod"
                    }, 
                    {
                        "name": "completionDate.endDateTime", 
                        "format": "date-time", 
                        "required": false, 
                        "in": "query", 
                        "type": "string", 
                        "description": "For filtering: An instant of time, ending at the TimePeriod."
                    }, 
                    {
                        "name": "completionDate.startDateTime", 
                        "format": "date-time", 
                        "required": false, 
                        "in": "query", 
                        "type": "string", 
                        "description": "For filtering: An instant of time, starting at the TimePeriod"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "documentNumber", 
                        "description": "For filtering: A reference number assigned to an Agreement that follows a prescribed numbering system."
                    }, 
                    {
                        "name": "initialDate", 
                        "format": "date-time", 
                        "required": false, 
                        "in": "query", 
                        "type": "string", 
                        "description": "For filtering: Date at which the agreement was initialized"
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "name", 
                        "description": "For filtering: A human-readable name for the agreement"
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "statementOfIntent", 
                        "description": "For filtering: An overview and goals of the Agreement."
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "status", 
                        "description": "For filtering: The current status of the agreement. Typical values are: in process, approved and rejected."
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "type", 
                        "description": "For filtering: The type of the agreement. For example \"commercial\"."
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "version", 
                        "description": "For filtering: A string identifying the version of the agreement."
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "agreementSpecification.name", 
                        "description": "For filtering: Name of the agreement specification"
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "engagedPartyRole.name", 
                        "description": "For filtering: The name of the referred party role."
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "engagedPartyRole.partyId", 
                        "description": "For filtering: The identifier of the engaged party that is linked to the PartyRole object."
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "engagedPartyRole.partyName", 
                        "description": "For filtering: The name of the engaged party that is linked to the PartyRole object."
                    }, 
                    {
                        "name": "agreementAuthorization.date", 
                        "format": "date-time", 
                        "required": false, 
                        "in": "query", 
                        "type": "string", 
                        "description": "For filtering: The date associated with the authorization state."
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "agreementAuthorization.signatureRepresentation", 
                        "description": "For filtering: Indication that represents whether the signature is a physical paper signature or a digital signature."
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "agreementAuthorization.state", 
                        "description": "For filtering: Current status of the authorization, for example in process, approved, rejected."
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "characteristic.name", 
                        "description": "For filtering: Name of the characteristic"
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "characteristic.value", 
                        "description": "For filtering: Value of the characteristic"
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "associatedAgreement.name", 
                        "description": "For filtering: Name of the agreement"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Agreement"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "operationId": "createAgreement",
                "summary": "Create a new Agreement",
                "description": "This operation is used to create a new Agreement, along with the associated entities.",
                "tags": [
                    "agreement"
                ], 
                "parameters": [{
                  "required": true,
                  "in": "body",
                  "name": "Agreement",
                  "description": "The Agreement to be created",
                  "schema": {
                    "$ref": "#/definitions/Agreement"
                  }
                }],
                "responses": {
                    "201": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Agreement"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/agreement/{id}": {
            "get": {
                "operationId": "retrieveAgreement", 
                "summary": "Retrieves a 'Agreement' by Id", 
                "tags": [
                    "agreement"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Agreement"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Agreement"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "operationId": "updateAgreement", 
                "summary": "Partially updates an 'Agreement' by Id", 
                "tags": [
                    "agreement"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Agreement"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/Agreement_Update"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "agreement", 
                        "description": "The Agreement to be updated"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Updated", 
                        "schema": {
                            "$ref": "#/definitions/Agreement"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "operationId": "deleteAgreement",
                "summary": "Delete an existing Agreement",
                "description": "This operation is used to delete an existing Agreement object, along with the associated entities.",
                "tags": [
                    "agreement"
                ], 
                "parameters": [{
                  "required": true,
                  "in": "path",
                  "name": "id",
                  "type": "string",
                  "description": "Identifier of the Agreement"
                }],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/agreementSpecification": {
            "get": {
                "operationId": "listAgreementSpecification", 
                "summary": "List or find 'AgreementSpecification' objects", 
                "description": "This operation is used to retrieve Agreement Specification information, using filtering criteria. The request may specify the list of fields to be returned in the response, along with query parameters i.e. filter, for returning specific 'Agreement Specification' objects. e.g. /agreementSpecification?fields=id,name&status=approved&engagedParty.name=\"So Magic Ltd\"",
                "tags": [
                    "agreementSpecification"
                ], 
                "parameters": [
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "fields", 
                        "description": "Comma separated properties to display in response"
                    }, 
                    {
                        "type": "boolean", 
                        "required": false, 
                        "in": "query", 
                        "name": "isBundle", 
                        "description": "For filtering: Indicates that this agreement specification is a grouping of other agreement specifications. The list of bundled agreement specifications is provided via the specificationRelationship property."
                    }, 
                    {
                        "name": "lastUpdate", 
                        "format": "date-time", 
                        "required": false, 
                        "in": "query", 
                        "type": "string", 
                        "description": "For filtering: Date and time of the last update"
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "lifecycleStatus", 
                        "description": "For filtering: Indicates the current lifecycle status"
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "name", 
                        "description": "For filtering: Name of the agreement specification"
                    }, 
                    {
                        "name": "validFor.endDateTime", 
                        "format": "date-time", 
                        "required": false, 
                        "in": "query", 
                        "type": "string", 
                        "description": "For filtering: An instant of time, ending at the TimePeriod."
                    }, 
                    {
                        "name": "validFor.startDateTime", 
                        "format": "date-time", 
                        "required": false, 
                        "in": "query", 
                        "type": "string", 
                        "description": "For filtering: An instant of time, starting at the TimePeriod"
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "version", 
                        "description": "For filtering: Agreement specification version"
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "serviceCategory.name", 
                        "description": "For filtering: Name of the category"
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "serviceCategory.version", 
                        "description": "For filtering: Category version"
                    }, 
                    {
                        "type": "boolean", 
                        "required": false, 
                        "in": "query", 
                        "name": "specCharacteristic.configurable", 
                        "description": "For filtering: If true, the Boolean indicates that the characteristic is configurable"
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "specCharacteristic.name", 
                        "description": "For filtering: Name of the characteristic being specified."
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "specCharacteristic.valueType", 
                        "description": "For filtering: A kind of value that the characteristic can take on, such as numeric, text and so forth"
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "relatedParty.name", 
                        "description": "For filtering: Name of the related party"
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "relatedParty.role", 
                        "description": "For filtering: Role of the related party."
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "attachment.type", 
                        "description": "For filtering: Attachment type such as video, picture"
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "attachment.url", 
                        "description": "For filtering: Uniform Resource Locator, is a web page address (a subset of URI)"
                    }, 
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "specificationRelationship.type", 
                        "description": "For filtering: Type of relationship such as, substitution or dependency."
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AgreementSpecification"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "operationId": "createAgreementSpec",
                "summary": "Create a new Agreement Specification",
                "description": "This operation is used to create a new Agreement Specification, along with the associated entities.",
                "tags": [
                    "agreementSpecification"
                ], 
                "parameters": [{
                  "required": true,
                  "in": "body",
                  "name": "AgreementSpec",
                  "description": "The Agreement Specification to be created",
                  "schema": {
                    "$ref": "#/definitions/AgreementSpecification"
                  }
                }],
                "responses": {
                    "201": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AgreementSpecification"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/agreementSpecification/{id}": {
            "get": {
                "operationId": "retrieveAgreementSpecification", 
                "summary": "Retrieves a 'AgreementSpecification' by Id", 
                "tags": [
                    "agreementSpecification"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Agreement Specification"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AgreementSpecification"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "operationId": "updateAgreementSpecification", 
                "summary": "Partially updtes an 'Agreement Specification' by Id", 
                "tags": [
                    "agreementSpecification"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string",
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Agreement Specification"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/Agreement_Update"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "agreementSpecification", 
                        "description": "The Agreement Specification to be updated"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Updated", 
                        "schema": {
                            "$ref": "#/definitions/AgreementSpecification"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "operationId": "deleteAgreementSpecification",
                "summary": "Delete an existing Agreement Specification",
                "description": "This operation is used to delete an existing Agreement Specification object, along with the associated entities.",
                "tags": [
                    "agreementSpecification"
                ], 
                "parameters": [{
                  "required": true,
                  "in": "path",
                  "name": "id",
                  "type": "string",
                  "description": "Identifier of the Agreement Specification"
                }],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/hub": {
            "post": {
                "operationId": "registerListener", 
                "summary": "Register a listener", 
                "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.", 
                "tags": [
                    "events subscription"
                ], 
                "parameters": [
                    {
                        "name": "data", 
                        "schema": {
                            "$ref": "#/definitions/EventSubscriptionInput"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "description": "Data containing the callback endpoint to deliver the information"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Subscribed", 
                        "schema": {
                            "$ref": "#/definitions/EventSubscription"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/hub/{id}": {
            "delete": {
                "operationId": "unregisterListener", 
                "summary": "Unregister a listener", 
                "description": "Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.", 
                "tags": [
                    "events subscription"
                ], 
                "parameters": [
                    {
                        "name": "id", 
                        "type": "string", 
                        "required": true, 
                        "in": "path", 
                        "description": "The id of the registered listener"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Unsubscribed"
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    }, 
    "definitions": {
        "Agreement": {
            "type": "object", 
            "description": "An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.", 
            "properties": {
                "agreementPeriod": {
                    "$ref": "#/definitions/TimePeriod"
                }, 
                "completionDate": {
                    "$ref": "#/definitions/TimePeriod"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Narrative that explains the agreement and details about the it , such as why the agreement is taking place."
                }, 
                "documentNumber": {
                    "type": "integer", 
                    "description": "A reference number assigned to an Agreement that follows a prescribed numbering system."
                }, 
                "href": {
                    "type": "string", 
                    "description": "Unique url identifying the agreement as a resource"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier for the agreement"
                }, 
                "initialDate": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date at which the agreement was initialized"
                }, 
                "name": {
                    "type": "string", 
                    "description": "A human-readable name for the agreement"
                }, 
                "statementOfIntent": {
                    "type": "string", 
                    "description": "An overview and goals of the Agreement."
                }, 
                "status": {
                    "type": "string", 
                    "description": "The current status of the agreement. Typical values are: in process, approved and rejected."
                }, 
                "type": {
                    "type": "string", 
                    "description": "The type of the agreement. For example \"commercial\"."
                }, 
                "version": {
                    "type": "string", 
                    "description": "A string identifying the version of the agreement."
                }, 
                "agreementSpecification": {
                    "$ref": "#/definitions/AgreementSpecificationRef"
                }, 
                "agreementItem": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementItem"
                    }
                }, 
                "engagedPartyRole": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/PartyRoleRef"
                    }
                }, 
                "agreementAuthorization": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementAuthorization"
                    }
                }, 
                "characteristic": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Characteristic"
                    }
                }, 
                "associatedAgreement": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementRef"
                    }
                }
            }
        }, 
        "Agreement_Update": {
            "type": "object", 
            "description": "An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.\nSkipped properties: id,href", 
            "properties": {
                "agreementPeriod": {
                    "$ref": "#/definitions/TimePeriod"
                }, 
                "completionDate": {
                    "$ref": "#/definitions/TimePeriod"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Narrative that explains the agreement and details about the it , such as why the agreement is taking place."
                }, 
                "documentNumber": {
                    "type": "integer", 
                    "description": "A reference number assigned to an Agreement that follows a prescribed numbering system."
                }, 
                "initialDate": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date at which the agreement was initialized"
                }, 
                "name": {
                    "type": "string", 
                    "description": "A human-readable name for the agreement"
                }, 
                "statementOfIntent": {
                    "type": "string", 
                    "description": "An overview and goals of the Agreement."
                }, 
                "status": {
                    "type": "string", 
                    "description": "The current status of the agreement. Typical values are: in process, approved and rejected."
                }, 
                "type": {
                    "type": "string", 
                    "description": "The type of the agreement. For example \"commercial\"."
                }, 
                "version": {
                    "type": "string", 
                    "description": "A string identifying the version of the agreement."
                }, 
                "agreementSpecification": {
                    "$ref": "#/definitions/AgreementSpecificationRef"
                }, 
                "agreementItem": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementItem"
                    }
                }, 
                "engagedPartyRole": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/PartyRoleRef"
                    }
                }, 
                "agreementAuthorization": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementAuthorization"
                    }
                }, 
                "characteristic": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Characteristic"
                    }
                }, 
                "associatedAgreement": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementRef"
                    }
                }
            }
        }, 
        "AgreementSpecification": {
            "type": "object", 
            "description": "A template of an agreement that can be used when establishing partnerships.", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "A narrative that explains in detail what the agreement specification is about."
                }, 
                "href": {
                    "type": "string", 
                    "description": "Reference of the agreement specification"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the agreement specification"
                }, 
                "isBundle": {
                    "type": "boolean", 
                    "description": "Indicates that this agreement specification is a grouping of other agreement specifications. The list of bundled agreement specifications is provided via the specificationRelationship property."
                }, 
                "lastUpdate": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date and time of the last update"
                }, 
                "lifecycleStatus": {
                    "type": "string", 
                    "description": "Indicates the current lifecycle status"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the agreement specification"
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                }, 
                "version": {
                    "type": "string", 
                    "description": "Agreement specification version"
                }, 
                "serviceCategory": {
                    "$ref": "#/definitions/CategoryRef"
                }, 
                "specCharacteristic": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementSpecCharacteristic"
                    }
                }, 
                "relatedParty": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                }, 
                "attachment": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementAttachment"
                    }
                }, 
                "specificationRelationship": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementSpecificationRelationship"
                    }
                }
            }
        }, 
        "TimePeriod": {
            "type": "object", 
            "description": "A base / value business entity used to represent a period of time between two timepoints.", 
            "properties": {
                "endDateTime": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "An instant of time, ending at the TimePeriod."
                }, 
                "startDateTime": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "An instant of time, starting at the TimePeriod"
                }
            }
        },
        "AgreementSpecificationRef": {
            "type": "object", 
            "description": "AgreementSpecification reference. An AgreementSpecification represents a template of an agreement that can be used when establishing partnerships.", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "A narrative that explains in detail what the agreement specification is about."
                }, 
                "href": {
                    "type": "string", 
                    "description": "Reference URL of the agreement specification"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the agreement specification"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the agreement specification"
                }
            }
        }, 
        "AgreementItem": {
            "type": "object", 
            "description": "A part of the agreement expressed in terms of a product offering and possibly including specific terms and conditions.", 
            "properties": {
                "productOffering": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/ProductOfferingRef"
                    }
                }, 
                "termOrCondition": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementTermOrCondition"
                    }
                }
            }
        }, 
        "PartyRoleRef": {
            "type": "object", 
            "description": "Party role reference. A party role represents the part played by a party in a given context.", 
            "properties": {
                "href": {
                    "type": "string", 
                    "description": "Reference of the product"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the product"
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of the referred party role."
                }, 
                "partyId": {
                    "type": "string", 
                    "description": "The identifier of the engaged party that is linked to the PartyRole object."
                }, 
                "partyName": {
                    "type": "string", 
                    "description": "The name of the engaged party that is linked to the PartyRole object."
                }
            }
        }, 
        "AgreementAuthorization": {
            "type": "object", 
            "description": "A business participant that is responsible for approving the agreement.", 
            "properties": {
                "date": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "The date associated with the authorization state."
                }, 
                "signatureRepresentation": {
                    "type": "string", 
                    "description": "Indication that represents whether the signature is a physical paper signature or a digital signature."
                }, 
                "state": {
                    "type": "string", 
                    "description": "Current status of the authorization, for example in process, approved, rejected."
                }
            }
        }, 
        "Characteristic": {
            "type": "object", 
            "description": "Describes a given characteristic of an object or entity through a name/value pair.", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the characteristic"
                }, 
                "value": {
                    "type": "string", 
                    "description": "Value of the characteristic"
                }
            }
        }, 
        "AgreementRef": {
            "type": "object", 
            "description": "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications.", 
            "properties": {
                "href": {
                    "type": "string", 
                    "description": "Reference of the agreement"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Identifier of the agreement"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the agreement"
                }
            }
        }, 
        "ProductOfferingRef": {
            "type": "object", 
            "description": "ProductOffering reference. A product offering represents entities that are orderable from the provider of the catalog, this resource includes pricing information.", 
            "properties": {
                "href": {
                    "type": "string", 
                    "description": "Reference of the product offering"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the product offering"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the product offering"
                }, 
                "bundledProductOffering": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/BundledProductOfferingRef"
                    }
                }
            }
        }, 
        "AgreementTermOrCondition": {
            "type": "object", 
            "description": "Aspects of the agreement not formally specified elsewhere in the agreement and that cannot be captured elsewhere in a formal notation, or automatically monitored and require a more human level of management.", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "Text that explains the term or condition of the agreement."
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique number assigned for reference."
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                }
            }
        }, 
        "BundledProductOfferingRef": {
            "type": "object", 
            "description": "BundledProductOffering Reference. A type of ProductOffering that belongs to a grouping of ProductOfferings made available to the market. It inherits of all attributes of ProductOffering.", 
            "properties": {
                "href": {
                    "type": "string", 
                    "description": "Reference of the product offering"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the product offering"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the product offering"
                }, 
                "bundledProductOffering": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/BundledProductOfferingRef"
                    }
                }
            }
        }, 
        "CategoryRef": {
            "type": "object", 
            "description": "Category reference. The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates.", 
            "properties": {
                "href": {
                    "type": "string", 
                    "description": "Unique reference of the category"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique reference of the category"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the category"
                }, 
                "version": {
                    "type": "string", 
                    "description": "Category version"
                }
            }
        }, 
        "AgreementSpecCharacteristic": {
            "type": "object", 
            "description": "A characteristic quality or distinctive feature of an agreement.", 
            "properties": {
                "configurable": {
                    "type": "boolean", 
                    "description": "If true, the Boolean indicates that the characteristic is configurable"
                }, 
                "description": {
                    "type": "string", 
                    "description": "A narrative that explains in detail what the characteristic is"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the characteristic being specified."
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                }, 
                "valueType": {
                    "type": "string", 
                    "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
                }, 
                "specCharacteristicValue": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AgreementSpecCharacteristicValue"
                    }
                }
            }
        }, 
        "RelatedPartyRef": {
            "type": "object", 
            "description": "RelatedParty reference. A related party defines party or party role linked to a specific entity.", 
            "properties": {
                "href": {
                    "type": "string", 
                    "description": "Reference of the related party, could be a party reference or a party role reference"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of a related party"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the related party"
                }, 
                "role": {
                    "type": "string", 
                    "description": "Role of the related party."
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                }
            }
        }, 
        "AgreementAttachment": {
            "type": "object", 
            "description": "Represents a complementary piece of information to describe the agreement. Could be a document, picture, a video or any kind of multimedia content.", 
            "properties": {
                "href": {
                    "type": "string", 
                    "description": "Reference of the attachment"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the attachment"
                }, 
                "type": {
                    "type": "string", 
                    "description": "Attachment type such as video, picture"
                }, 
                "url": {
                    "type": "string", 
                    "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                }
            }
        }, 
        "AgreementSpecificationRelationship": {
            "type": "object", 
            "description": "A relationship between agreement specifications. Typical relationships are substitution and dependency.", 
            "properties": {
                "href": {
                    "type": "string", 
                    "description": "Reference of an agreement specification."
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the related agreement specification."
                }, 
                "type": {
                    "type": "string", 
                    "description": "Type of relationship such as, substitution or dependency."
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                }
            }
        }, 
        "AgreementSpecCharacteristicValue": {
            "type": "object", 
            "description": "A number or text that can be assigned to an agreement specification characteristic.", 
            "properties": {
                "default": {
                    "type": "boolean", 
                    "description": "Indicates if the value is the default value for a characteristic"
                }, 
                "unitOfMeasure": {
                    "type": "string", 
                    "description": "Unit of measure for the characteristic, such as minutes, gigabytes (GB) and so on."
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod"
                }, 
                "value": {
                    "type": "string", 
                    "description": "A discrete value that the characteristic can take on"
                }, 
                "valueFrom": {
                    "type": "string", 
                    "description": "The low range value that a characteristic can take on"
                }, 
                "valueTo": {
                    "type": "string", 
                    "description": "The upper range value that a characteristic can take on"
                }, 
                "valueType": {
                    "type": "string", 
                    "description": "A kind of value that the characteristic can take on, such as numeric, text, and so forth"
                }
            }
        }, 
        "EventSubscription": {
            "required": [
                "id", 
                "callback"
            ], 
            "properties": {
                "id": {
                    "type": "string", 
                    "description": "Id of the listener"
                }, 
                "callback": {
                    "type": "string", 
                    "description": "The callback being registered."
                }, 
                "query": {
                    "type": "string", 
                    "description": "additional data to be passed"
                }
            }
        }, 
        "EventSubscriptionInput": {
            "required": [
                "callback"
            ], 
            "properties": {
                "callback": {
                    "type": "string", 
                    "description": "The callback being registered."
                }, 
                "query": {
                    "type": "string", 
                    "description": "additional data to be passed"
                }
            }
        }, 
        "Error": {
            "required": [
                "code", 
                "message"
            ], 
            "properties": {
                "code": {
                    "type": "integer", 
                    "description": "An integer coding the error type. This is given to caller so he can translate them if required."
                }, 
                "message": {
                    "type": "string", 
                    "description": "A short localized string that describes the error."
                }, 
                "description": {
                    "type": "string", 
                    "description": "(optional) A long localized error description if needed. It can contain precise information about which parameter is missing, or what are the identifier acceptable values."
                }, 
                "infoURL": {
                    "type": "string", 
                    "description": "(optional) A URL to online documentation that provides more information about the error."
                }
            }
        }
    }
}
